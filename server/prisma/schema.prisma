// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// schema.prisma
enum Role {
  ADMIN
  USER
}

model User {
  id              Int               @id @default(autoincrement())
  createAt        DateTime          @default(now())
  updateAt        DateTime          @updatedAt
  name            String
  email           String            @unique
  password        String
  status          Boolean           @default(false)
  accessToken     String?
  role            Role              @default(USER)
  ExpenseCategory ExpenseCategory[]
  SourceIncome    SourceIncome[]
  Expense         Expense[]
  Incomes         Incomes[]
}

model ExpenseCategory {
  id       Int       @id @default(autoincrement())
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  name     String
  User     User      @relation(fields: [userId], references: [id])
  userId   Int
  Expense  Expense[]
}

model SourceIncome {
  id       Int       @id @default(autoincrement())
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  name     String
  User     User      @relation(fields: [userId], references: [id])
  userId   Int
  Incomes  Incomes[]
}

model Expense {
  id                Int             @id @default(autoincrement())
  createAt          DateTime        @default(now())
  updateAt          DateTime        @updatedAt
  description       String?
  amount            Decimal
  date              DateTime
  User              User            @relation(fields: [userId], references: [id])
  userId            Int
  ExpenseCategory   ExpenseCategory @relation(fields: [expenseCategoryId], references: [id])
  expenseCategoryId Int
}

// Ingresos
model Incomes {
  id             Int          @id @default(autoincrement())
  createAt       DateTime     @default(now())
  updateAt       DateTime     @updatedAt
  description    String?
  amount         Decimal
  date           DateTime
  User           User         @relation(fields: [userId], references: [id])
  userId         Int
  SourceIncome   SourceIncome @relation(fields: [sourceIncomeId], references: [id])
  sourceIncomeId Int
}
